productosproductos-- MySQL Script generated by MySQL Workbench
-- Thu Feb  2 18:40:56 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tiendaonline
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tiendaonline` ;

-- -----------------------------------------------------
-- Schema tiendaonline
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tiendaonline` DEFAULT CHARACTER SET utf8 ;
USE `tiendaonline` ;

-- -----------------------------------------------------
-- Table `tiendaonline`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaonline`.`usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(30) NOT NULL,
  `apellidos` VARCHAR(30) NOT NULL,
  `tipo_doc_identidad` VARCHAR(20) NOT NULL,
  `num_doc_identidad` INT NOT NULL,
  `ciudad` VARCHAR(30) NOT NULL,
  `barrio` VARCHAR(30) NOT NULL,
  `dir_domicilio` VARCHAR(30) NOT NULL,
  `nombre_usuario` VARCHAR(30) NOT NULL,
  `password` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idusuarios_UNIQUE` ON `tiendaonline`.`usuarios` (`id_usuario` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `tiendaonline`.`producto_inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaonline`.`producto_inventario` (
  `id_producto_inventario` INT NOT NULL AUTO_INCREMENT,
  `id_producto` INT NOT NULL,
  `inv_inicial` INT NOT NULL,
  `cant_nuevo_producto` INT NOT NULL,
  `cant_producto_vendido` INT NOT NULL,
  PRIMARY KEY (`id_producto_inventario`),
  CONSTRAINT `productoInventario`
    FOREIGN KEY (`id_producto`)
    REFERENCES `tiendaonline`.`productos` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_producto_inventario_UNIQUE` ON `tiendaonline`.`producto_inventario` (`id_producto_inventario` ASC) VISIBLE;

CREATE INDEX `productoInventario_idx` ON `tiendaonline`.`producto_inventario` (`id_producto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `tiendaonline`.`productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaonline`.`productos` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `id_producto_inventario` INT NOT NULL,
  `nombre_producto` VARCHAR(30) NOT NULL,
  `info_producto` VARCHAR(50) NOT NULL,
  `precio_producto` FLOAT NOT NULL,
  `ref_imagen` VARCHAR(30) NOT NULL,
  `cat_producto` VARCHAR(30) NOT NULL,
  `desc_compra_producto` INT NOT NULL,
  `porcentaje_desc` FLOAT NOT NULL,
  `estado_catalogo` INT NOT NULL,
  PRIMARY KEY (`id_producto`),
  CONSTRAINT `inventarioProducto`
    FOREIGN KEY (`id_producto_inventario`)
    REFERENCES `tiendaonline`.`producto_inventario` (`id_producto_inventario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idproductos_UNIQUE` ON `tiendaonline`.`productos` (`id_producto` ASC) VISIBLE;

CREATE INDEX `inventarioProducto_idx` ON `tiendaonline`.`productos` (`id_producto_inventario` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `tiendaonline`.`canasta_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaonline`.`canasta_pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `id_usuario` INT NOT NULL,
  `cant_producto_pedido` INT NOT NULL,
  `total_productos_pedidos` INT NOT NULL,
  `total_venta` FLOAT NOT NULL,
  `forma_pago` VARCHAR(20) NOT NULL,
  `metodo_entrega` VARCHAR(20) NOT NULL,
  `fecha_venta` DATETIME NOT NULL,
  `domicilio_entrega` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  CONSTRAINT `usuarioPedido`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `tiendaonline`.`usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idpedido_UNIQUE` ON `tiendaonline`.`canasta_pedido` (`id_pedido` ASC) VISIBLE;

CREATE INDEX `usuarioPedido_idx` ON `tiendaonline`.`canasta_pedido` (`id_usuario` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `tiendaonline`.`canasta_pedido_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaonline`.`canasta_pedido_producto` (
  `id_pedido` INT NOT NULL,
  `id_producto` INT NOT NULL,
  CONSTRAINT `pedidoCanasta`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `tiendaonline`.`canasta_pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `productoCanasta`
    FOREIGN KEY (`id_producto`)
    REFERENCES `tiendaonline`.`productos` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `pedidoCanasta_idx` ON `tiendaonline`.`canasta_pedido_producto` (`id_pedido` ASC) VISIBLE;

CREATE INDEX `productoCanasta_idx` ON `tiendaonline`.`canasta_pedido_producto` (`id_producto` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
